[
        {
            "id": 8,
            "title": "Tiny-Verse",
            "tech" : "Unity-3d, C#",
            "play": "https://nayankamalverma.itch.io/tiny-verse",
            "description": "➢ Made this for WTF x IGDC game jam 2024 and the theme was “Small World, Big Adventure”.<br>➢ Created dynamic 3D environment, enemy AI, aim and shoot system, audio system, animation and engaging game mechanics to improve gameplay.<br>➢ Utilized singleton pattern, oops, coroutine for implementation.",
            "features": "gerg",
            "image": "images/project/TinyVerse.png",
            "github": "https://github.com/nayankamalverma/Tinyverse/tree/build-v.1.0.1"
        },{
            "id": 8,
            "title": "Tiny-Verse",
            "tech" : "Unity-3d, C#",
            "play": "https://nayankamalverma.itch.io/tiny-verse",
            "description": " Made this for WTF x IGDC game jam 2024 and the theme was “Small World, Big Adventure",
            "features": "➢ Made this for WTF x IGDC game jam 2024 and the theme was “Small World, Big Adventure”.<br>➢ Created dynamic 3D environment, enemy AI, aim and shoot system, audio system, animation and engaging game mechanics to improve gameplay.<br>➢ Utilized singleton pattern, oops, coroutine for implementation.",
            "image": "images/project/TinyVerse.png",
            "github": "https://github.com/nayankamalverma/Tinyverse/tree/build-v.1.0.1"
        },
        {
            "id": 7,
            "title": "",
            "tech" : "Unity-2D, C#",
            "play": "https://nayankamalverma.itch.io/chest-system",
            "description": "➢Chest-System is an interactive system, combining chest management, dynamic currency handling, and engaging mechanics. It utilizes advanced design patterns for a scalable and maintainable architecture. <br>➢ Manage chest states like Locked, Unlocking, and Unlocked with a queue system and reward collection using Scriptable Objects and State Machines.<br>➢  Implements Service Locator, Dependency Injection, MVC, Observer Pattern, Object Pooling, and the State Machine for modular and efficient design.",
            "features": "gerg",
            "image": "images/project/Chest_System.png",
            "github": "https://github.com/nayankamalverma/Chest-System"
        },
        {
            "id": 7,
            "title": "Angry Monkeys",
            "tech" : "Unity-2D, C#",
            "play": "https://nayankamalverma.itch.io/chest-system",
            "description": "➢Angry Monkeys is a tower defense game, where players strategically place monkey towers to stop waves of challenging balloons.<br>➢ Strategically deploy monkeys like Sharp Eye, Ninja, and Sniper, each with unique abilities, using projectiles like Darts, Shuriken, and Bullets for tailored gameplay.<br>➢ Face Red, Blue, and Metal balloons, each with unique speed, damage, and rewards, across nine increasingly difficult waves.<br>➢ Implements Singleton, Service Locator, and Dependency Injection to create a decoupled and modular system for managing services.",
            "features": "gerg",
            "image": "images/project/Chest_System.png",
            "github": "https://github.com/nayankamalverma/Angry-Monkeys"
        },
        {
            "id": 6,
            "title": "Snake-2D",
            "tech" : "C++ and SFML",
            "play": "",
            "description": "➢ Retro snake game with 4 unique levels with one boss level and added different boosters.<br>➢ Implemented the Service locator design pattern to manage game services, enhancing modularity and scalablity.<br>➢ Used MVC pattern for creating snake and levels.",
            "features": "gerg",
            "video": "https://www.youtube.com/embed/C0y3PQm6ilo",
            "github": "https://github.com/nayankamalverma/Snake"
        },
        {
            "id": 5,
            "title": "Endless-Waves",
            "tech" : "Unity-2d, C#",
            "play": "https://nayankamalverma.itch.io/endless-waves",
            "description": "➢ Made this for a game jam hosted by GameDev.tv and the theme was “Last stand”.<br>➢ Implemented enemy AI, aim and shoot system, high score save system, audio system and setup difficultycurve as per time passes.<br>➢ Also added animations, blood particle system with interactive UI",
            "features": "gerg",
            "image": "images/project/endless-waves.png",
            "github": "https://github.com/nayankamalverma/Endless-Waves"
        },
        {
            "id": 4,
            "title": "Minesweeper",
            "tech" : "C++ and SFML",
            "play": "",
            "description": "➢ Developed a Minesweeper game with traditional mechanics and scalable design.<br>➢ Implemented the Service Locator design pattern for efficient resource management.<br>➢ Applied MVC architecture to separate game logic, UI, and data handling.",
            "features": "gergh",
            "video": "https://www.youtube.com/embed/tgYr3GgCFcM",
            "github": "https://github.com/nayankamalverma/Minesweeper"
        },
        {
            "id": 3,
            "title": "Skip-The Lights",
            "tech" : "Unity-2d, C#",
            "play": "https://outscal.com/nayankamalverma/game/play-skip-the-lights-1-game",
            "description": "➢ A endless runner game.<br>➢ Implemented a dynamic background parallax system to enhance visual depth and user experience.<br>➢ Utilized singleton pattern, oops, coroutine, JSON utilities to build save system for high score.<br>➢ Created dynamic UI elements and engaging game mechanics to improve gameplay.",
            "features": "egsg",
            "video": "https://www.youtube.com/embed/74bQSqWbbkY",
            "github": "https://github.com/nayankamalverma/Skip---The-Lights"
        },
        {
            "id": 2,
            "title": "The Explorer",
            "tech" : "Unity-2d, C#",
            "play": "https://outscal.com/nayankamalverma/game/play-the-explorer-game",
            "description": "➢ A 2D RPG game.<br>➢ Implemented gameplay mechanics, enemy AIs, character animations, audio system.<br>➢ also designed and created UI elements and 3 unique levels using tilemap tool.<br>➢ Used singleton, OOP for implementation.",
            "features": "sdfv",
            "image": "images/project/explorer.png",
            "github": "https://github.com/nayankamalverma/2D-Platformer-Game"
        },
        {
            "id": 1,
            "title": "Duck Hunt",
            "tech" : "C++ and SFML",
            "play": "",
            "description": "➢ Clone of classic Duck hunt game<br>➢ Utilized MVC, service locator pattern for smooth gameplay.<br>➢ Animated duck sprites with different flying patterns.<br>➢  Mouse-controlled aiming and shooting Score tracking.<br>➢  Sound effects for shooting and duck hits and Game over screen when the player misses too many ducks",
            "features": "vds",
            "image": "images/project/duck_hunt.jpg",
            "github": "https://github.com/nayankamalverma/Duck-Hunt"
        },
        {
            "id": 0,
            "title": "Space Invaders",
            "tech" : "C++ and SFML",
            "play": "",
            "description": "➢ Implemented core mechanics like player controls, enemy movement and collision detection.<br>➢ Utilized MVC, service locator pattern, OOP principles, event handling, and optimized performance for smooth gameplay.<br>➢ Integrated graphics, animations, and sound effects to enhance the user experience.",
            "features": "sdfv",
            "video": "https://www.youtube.com/embed/kgfeGIyMsJc",
            "github": "https://github.com/nayankamalverma/Space-Invaders"
        }
    ]
    